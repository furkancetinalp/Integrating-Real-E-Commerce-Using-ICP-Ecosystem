type Main = 
    record {
        temp: float64;
        feels_like: float64;
        temp_min: float64;
        temp_max: float64;
        pressure: float64;
        humidity: float64;
    };
type Condition =
    record{
        id: float64;
        main: text;
        description:text
    };

type Wind =
    record{
        speed: float64;
        deg:float64
    };

type Weather =
    record{
        main: Main;
        weather:vec Condition;
        wind: Wind;
    };
type Result = 
    variant {
        Ok: Weather;
        Err: text;
    };

type LoginModel =
    record{
        status: text;
        user: text;
        refresh_token:text;
        access_token:text;
        notification_hub_id:text;
        chat_token:text;
    };


type ResultLetgo = 
    variant {
        Ok: TokenModel;
        Err: text;
    };

type TokenModel =
    record{
        id:text;
        token: text;
    };

type SendProductResult = 
    variant {
        Ok: Product;
        Err: text;
    };

type Product =
    record{
        id: text;
        title:text;
        description:text;
        image_url:text;
        price:float64;
        created_at:text;
        category_id:text;
    };

 type GetCategoriesResult = 
    variant {
        Ok: vec Categories;
        Err: text;
    };   

type Categories = 
    record{
        id:text;
        key:text;
        name:text;
    };
    
type ImportProductResult = 
    variant {
        Ok: text;
        Err: text;
    };
service: {
    "get_product": (nat64) -> ( opt Product) query ;
    "get_all_products_from_canister": () -> ( opt vec Product) query ;
    "login_letgo": (email:text,password:text) -> (ResultLetgo) ;
    "sendProductLetgo": (title:text,category_id:nat64,price:float64,image_id:text,description:text,token:text) -> (SendProductResult) ;
    "import_categories": () -> ( opt text)  ;
    "get_all_categories_from_canister": () -> ( opt vec Categories)  ;
    "get_category_by_name": (name:text) -> ( opt Categories) query ;
    "import_products": (userid:text,token:text) -> (  ImportProductResult)  ;

}
